[{"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/reportWebVitals.js":"1","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/LoginForm/LoginForm.js":"2","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/NavLandingComponent/NavLandingComponent.js":"3","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/RegisterForm/RegisterForm.js":"4","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/LandingComponent.js":"5","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/App.js":"6","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/index.js":"7","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/DashboardComponent/DashboardComponent.js":"8","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/DashboardComponent/PostComponent/PostComponent.js":"9","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/ProfileComponent/ProfileComponent.js":"10","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Configs.js":"11"},{"size":362,"mtime":1606538118401,"results":"12","hashOfConfig":"13"},{"size":2973,"mtime":1607110390346,"results":"14","hashOfConfig":"13"},{"size":1183,"mtime":1607107057916,"results":"15","hashOfConfig":"13"},{"size":7468,"mtime":1607107018497,"results":"16","hashOfConfig":"13"},{"size":2502,"mtime":1607050226716,"results":"17","hashOfConfig":"13"},{"size":1199,"mtime":1606714970604,"results":"18","hashOfConfig":"13"},{"size":500,"mtime":1606538118401,"results":"19","hashOfConfig":"13"},{"size":3812,"mtime":1607224440531,"results":"20","hashOfConfig":"13"},{"size":4007,"mtime":1607226846780,"results":"21","hashOfConfig":"13"},{"size":6497,"mtime":1607224521989,"results":"22","hashOfConfig":"13"},{"size":144,"mtime":1607108373572,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"iur2ci",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/reportWebVitals.js",[],["51","52"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/LoginForm/LoginForm.js",["53"],"import React, { useState, useRef } from 'react'\nimport './style.css'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport Configs from '../../../Configs'\n\nconst LOGGING_IN_VALUE = 'Logging in...'\nconst LOG_IN_BUTTON_DEFAULT_VALUE = 'Log in'\n\n/**\n * Componenet function that represents the login form\n*/\nfunction LoginForm() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginButtonVal, setLoginButtonVal] = useState(\"Log in\");\n    const [loginMessage, setLoginMessage] = useState(null);\n\n    const history = useHistory()\n\n\n    const handleLoginSubmission = (e) => {\n        e.preventDefault();\n        setLoginButtonVal(LOGGING_IN_VALUE)\n        setTimeout(() => {\n            axios({\n                method: 'POST',\n                data: {\n                    username: username,\n                    password: password\n                },\n                withCredentials: true,\n                url: `${Configs.SERVER_URL}/auth/signin`\n            })\n                .then(response => {\n                    console.log(response.data)\n                    setLoginButtonVal(LOG_IN_BUTTON_DEFAULT_VALUE)\n                    // go to the user's dashboard\n                    if (response.data.success) {\n                        localStorage.setItem('user', JSON.stringify(response.data.message));\n                        console.log('inside local', JSON.parse(localStorage['user']))\n                        history.push('/dashboard');\n\n                    } else {\n                        setLoginMessage(response.data.message)\n                    }\n                })\n                .catch(err => console.error(err))\n        }, 2000)\n    }\n\n    return (\n        <Form onSubmit={handleLoginSubmission} className=\"login-form\" inline>\n            <Form.Control\n                className=\"mb-2 mr-sm-2\"\n                id=\"inlineFormInputName2\"\n                placeholder=\"username\"\n                style={inputStyle}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <Form.Control\n                className=\"mb-2 mr-sm-2\"\n                id=\"inlineFormInputName2\"\n                type=\"password\"\n                placeholder=\"Password\"\n                style={inputStyle}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" className=\"mb-2 login-btn\">\n                {loginButtonVal}\n            </Button>\n            {\n                loginMessage\n                    ? (<span style={loginMsgStyle}>{loginMessage}</span>)\n                    : (<></>)\n            }\n        </Form>\n    )\n}\n\n// Styles\nconst inputStyle = {\n    height: '60px',\n    borderBottom: '3px lightgrey solid',\n    borderRadius: 'unset',\n    backgroundColor: 'transparent',\n    color: 'white'\n}\n\nconst loginMsgStyle = {\n    color: 'white'\n}\n\n\nexport default LoginForm;","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/NavLandingComponent/NavLandingComponent.js",[],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/RegisterForm/RegisterForm.js",["54","55"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/LandingComponent/LandingComponent.js",["56"],"import React, { useEffect } from 'react'\nimport './style.css'\nimport LoginForm from './LoginForm/LoginForm'\nimport RegisterForm from './RegisterForm/RegisterForm'\nimport NavLandingComponent from './NavLandingComponent/NavLandingComponent'\nimport { Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment, faUserFriends, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory } from 'react-router-dom'\n\nfunction LandingComponent() {\n    const history = useHistory()\n    useEffect(() => {\n        if(localStorage['user']) {\n            history.push('/dashboard')\n        }\n    })\n    return (\n        <>\n            <div className=\"landing-main-wrapper\">\n                <Row style={rowStyle}>\n                    <Col md={6} style={{padding:'unset'}}>\n                        <div style={leftCol} className=\"left-column\">\n                            <div className=\"left-column-content\">\n                                <div className=\"container-icon-left\">\n                                    <FontAwesomeIcon icon={faSearch} size=\"2x\" color=\"white\" />\n                                    <p>Follow your interests.</p>\n                                </div>\n                                <div className=\"container-icon-left\">\n                                    <FontAwesomeIcon icon={faUserFriends} size=\"2x\" color=\"white\" />\n                                    <p>Hear what people are talking about.</p>\n                                </div>\n                                <div className=\"container-icon-left\">\n                                    <FontAwesomeIcon icon={faComment} size=\"2x\" color=\"white\" />\n                                    <p>Join the conversation.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={6} style={{padding:'unset'}} >\n                        <div style={rightCol} className=\"right-column\">\n                            <LoginForm />\n                            <NavLandingComponent />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\n// styles\nconst leftCol = {\n    backgroundColor: '#08a0e9',\n    width:'100%',\n    height:'100vh'\n}\n\nconst rightCol = {\n    backgroundColor: '#292f33',\n    width:'100%',\n    height:'100%'\n}\n\nconst rowStyle = {\n    margin:'unset',\n}\n\nexport default LandingComponent;","/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/App.js",[],["57","58"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/index.js",[],["59","60"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/DashboardComponent/DashboardComponent.js",["61","62"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/DashboardComponent/PostComponent/PostComponent.js",["63","64"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Components/ProfileComponent/ProfileComponent.js",["65","66","67"],"/Users/jimmytran16/Personal-Work/Learning-React/project-practice/Twitter/twitter-client/src/Configs.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":160,"column":7,"nodeType":"74","messageId":"75","endLine":160,"endColumn":24},{"ruleId":"72","severity":1,"message":"77","line":164,"column":7,"nodeType":"74","messageId":"75","endLine":164,"endColumn":21},{"ruleId":"72","severity":1,"message":"78","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":20},{"ruleId":"68","replacedBy":"79"},{"ruleId":"70","replacedBy":"80"},{"ruleId":"68","replacedBy":"81"},{"ruleId":"70","replacedBy":"82"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":44},{"ruleId":"83","severity":1,"message":"84","line":48,"column":7,"nodeType":"85","endLine":48,"endColumn":16,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"87","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"88","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"89","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":65,"column":8,"nodeType":"85","endLine":65,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":120,"column":41,"nodeType":"93","endLine":120,"endColumn":96},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'successSignUpSpan' is assigned a value but never used.","'failSignUpSpan' is assigned a value but never used.","'RegisterForm' is defined but never used.",["94"],["95"],["94"],["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'faBreadSlice' is defined but never used.",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [history, refresh]",{"range":"102","text":"103"},"Update the dependencies array to be: [history]",{"range":"104","text":"105"},[1405,1414],"[history, refresh]",[2097,2099],"[history]"]